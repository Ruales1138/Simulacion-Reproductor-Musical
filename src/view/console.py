import sys
sys.path.append('src')
from model.reproductor import Reproductor
from model.barra import barra_progreso


class Console:
    def __init__(self):
        self.reproductor = Reproductor()
        self.opcion: int = 0
        self.aleatorio: bool = False
        self.porcentaje_adelantado: int = 0

    def crear_datos(self):
        self.reproductor.agregar('Bohemian Rhapsody', 'Queen', 12)
        self.reproductor.agregar('Another One Bites The Dust', 'Queen', 12)
        self.reproductor.agregar('Hotel California', 'Eagles', 11)
        self.reproductor.agregar('Smells Like Teen Spirit', 'Nirvana ', 14)
        self.reproductor.agregar('Something In The Way', 'Nirvana ', 14)
        self.reproductor.agregar('Soy Peor', 'Bad Bunny', 10)
        self.reproductor.agregar('Moscow Mule', 'Bad Bunny', 10)
        #self.reproductor.agregar('Dame tu cosita', 'El Chombo', 15)

    def imprimir(self):
        self.crear_datos()
        while self.opcion != 10:
            print('--------------------------------------------')
            print('üìù Men√∫ Principal')
            print('üé∏ Bienvenido a tu Playlist Interactiva üé∏')
            print('')
            print('1Ô∏è‚É£  Agregar canci√≥n')
            print('2Ô∏è‚É£  Avanzar a la siguiente canci√≥n')
            print('3Ô∏è‚É£  Retroceder a la canci√≥n anterior')
            print('4Ô∏è‚É£  Eliminar una canci√≥n')
            print('5Ô∏è‚É£  Mostrar canci√≥n en reproducci√≥n')
            print('6Ô∏è‚É£  Mostrar toda la playlist')
            print('7Ô∏è‚É£  Activar modo aleatorio')
            print('8Ô∏è‚É£  Adelantar una canci√≥n')
            print('9Ô∏è‚É£  Generar una subplaylist')
            print('üîü Salir')
            print('11 Borrar artista con menos reproducciones')
            print('--------------------------------------------')
            self.opcion = input('Seleccione una opci√≥n: ')
            if self.opcion == '':
                self.opcion = 0
            else:
                self.opcion = int(self.opcion)

                if self.opcion == 1:
                    print('')
                    print('‚ûï Agregar una Canci√≥n')
                    titulo = input('Ingrese el t√≠tulo: ')
                    artista = input('Ingrese el artista: ')
                    duracion = int(input('Ingrese la duraci√≥n (10-15 seg): '))
                    resultado = self.reproductor.agregar(titulo, artista, duracion)
                    print(resultado)

                if self.opcion == 2:
                    print('')
                    resultado = self.reproductor.avanzar()
                    print(resultado)

                if self.opcion == 3:
                    print('')
                    resultado = self.reproductor.retroceder()
                    print(resultado)

                if self.opcion == 4:
                    print('')
                    print('‚ùå Eliminar una Canci√≥n')
                    titulo = input('Ingrese el t√≠tulo de la canci√≥n a eliminar: ')
                    resultado = self.reproductor.eliminar(titulo)
                    print(resultado)

                if self.opcion == 5:
                    while True:
                        print('')
                        cancion_actual = self.reproductor.reproducir()
                        print('üéµ Ahora reproduciendo:')
                        print(f'{cancion_actual}                   ')
                        #barra_progreso(100, 1, self.porcentaje_adelantado)
                        barra_progreso(100, cancion_actual.duracion, self.porcentaje_adelantado)
                        self.porcentaje_adelantado = 0
                        if self.aleatorio is False:
                            self.reproductor.avanzar()
                        else:
                            resultado = self.reproductor.avanzar_aleatorio()
                            if resultado is True:
                                break
                        print('')
                        respuesta = input('Enter para seguir reproduciendo o "s" para salir: ')
                        if respuesta == 's':
                            break
                        print("\033[F\033[F\033[F\033[F\033[F\033[F", end="")

                if self.opcion == 6:
                    print('')
                    print(self.reproductor)

                if self.opcion == 7:
                    if self.aleatorio is False:
                        self.aleatorio = True
                        print('')
                        print('üîÄ Modo aleatorio activado. ')
                    else:
                        self.aleatorio = False
                        print('')
                        print('üîÄ Modo aleatorio desactivado. ')

                if self.opcion == 8:
                    cancion_actual = self.reproductor.reproducir()
                    print('')
                    respuesta = int(input('‚è© Ingrese el porcentaje de adelanto: '))
                    porcentaje = respuesta / 100
                    if porcentaje > 1:
                        self.reproductor.avanzar()
                        cancion_actual = self.reproductor.reproducir()
                        print(f'Avanzando a la siguiente cancion: {cancion_actual.titulo}')
                    else:
                        self.porcentaje_adelantado = porcentaje
                        print(f'‚åõ Adelantando {int(cancion_actual.duracion * porcentaje)}s... de {cancion_actual.titulo}')

                if self.opcion == 9:
                    print('')
                    print('üìë Generar una Subplaylist')
                    titulos = input('Ingrese los t√≠tulos de las canciones a incluir en la subplaylist (separados por comas): ')
                    resultado = self.reproductor.crear_subplaylist(titulos)
                    print(resultado)
                    respuesta = input('1Ô∏è‚É£  Quiere reproducir esta nueva subplaylist? (si, no): ')
                    if respuesta == 'si':
                        self.reproductor.cambiar_playlist()

                if self.opcion == 11:
                    print('')
                    respuesta = self.reproductor.borrar_artista()
                    print(respuesta)

                
c = Console()
c.imprimir()